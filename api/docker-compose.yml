---
version: '3.8'
services:
  nginx:
    image: nginx:latest
    container_name: nginx
    depends_on:
      - user-service
      - product-service
      - cart-service
      - notification-service
      - order-service
    ports: [80:80]
    volumes: [./gateway/nginx/nginx.conf:/etc/nginx/nginx.conf]
    networks: [reveal]
  redis:
    image: redis:alpine
    container_name: redis
    ports: [6379:6379]
    volumes: [redis-data:/data]
    restart: always
    networks: [reveal]
  postgres:
    image: postgres:16
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: barghest
      POSTGRES_DB: postgres
    healthcheck:
      test: [CMD, pg_isready, -U, postgres]
      interval: 10s
      timeout: 3s
      retries: 3
    ports: [5432:5432]
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks: [reveal]
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: barghest391@gmail.com
      PGADMIN_DEFAULT_PASSWORD: barghest
    ports: [5050:80]
    networks: [reveal]
    depends_on:
      postgres:
        condition: service_healthy
    volumes: [./db/servers.json:/pgadmin4/servers.json]
  user-service:
    build: ./services/user
    container_name: user-service
    depends_on:
      rabbitmq:
        condition: service_started
      postgres:
        condition: service_healthy
    environment:
      PORT: 8081
      SERVER_HOST: localhost
      DB_HOST: postgres
      DB_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: barghest
      POSTGRES_DB: users
    ports: [8081:8081]
    networks: [reveal]
  product-service:
    build: ./services/product
    container_name: product-service
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      PORT: 8082
      SERVER_HOST: localhost
      DB_HOST: postgres
      DB_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: barghest
      POSTGRES_DB: products
    ports: [8082:8082]
    networks: [reveal]
  cart-service:
    build: ./services/cart
    container_name: cart-service
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      PORT: 8083
      SERVER_HOST: localhost
      DB_HOST: postgres
      DB_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: barghest
      POSTGRES_DB: carts
    ports: [8083:8083]
    networks: [reveal]
  order-service:
    build: ./services/order
    container_name: order-service
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      PORT: 8084
      SERVER_HOST: localhost
      DB_HOST: postgres
      DB_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: barghest
      POSTGRES_DB: orders
    ports: [8084:8084]
    networks: [reveal]
  notification-service:
    build: ./services/notification/
    container_name: notification-service
    depends_on:
      rabbitmq:
        condition: service_started
      postgres:
        condition: service_healthy
    ports: [8086:8086]
    networks: [reveal]
  rabbitmq:
    container_name: rmq
    image: rabbitmq:3-management
    ports: [5672:5672, 15672:15672]
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks: [reveal]
networks:
  reveal:
    driver: bridge
volumes:
  pgdata:
  redis-data:
  pgadmin-data:
# kong:
  #   build: ./api-gateway 
  #   restart: always
  #   container_name: kong
  #   environment:
  #     KONG_DATABASE: postgres
  #     KONG_PG_HOST: postgres
  #     KONG_PG_USER: postgres
  #     KONG_PG_PASSWORD: barghest
  #     KONG_PROXY_ACCESS_LOG: "/dev/stdout"
  #     KONG_ADMIN_ACCESS_LOG: "/dev/stdout"
  #     KONG_PROXY_ERROR_LOG: "/dev/stderr"
  #     KONG_ADMIN_ERROR_LOG: "/dev/stderr"
  #     KONG_ADMIN_LISTEN: "0.0.0.0:8001"
  #     KONG_ADMIN_GUI_URL: "http://localhost:8002"
  #   depends_on: [postgres]
  #   ports:
  #     - "8000:8000"
  #     - "8001:8001"
  #     - "8002:8002"
  #   networks: [reveal]
